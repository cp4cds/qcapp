# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-25 09:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archive_path', models.CharField(max_length=500)),
                ('ncfile', models.CharField(blank=True, max_length=300)),
                ('size', models.FloatField(blank=True)),
                ('sha256_checksum', models.CharField(max_length=80)),
                ('md5_checksum', models.CharField(blank=True, max_length=80)),
                ('tracking_id', models.CharField(blank=True, max_length=80)),
                ('download_url', models.CharField(max_length=300)),
                ('variable', models.CharField(max_length=20)),
                ('variable_long_name', models.CharField(max_length=80)),
                ('cf_standard_name', models.CharField(max_length=300)),
                ('variable_units', models.CharField(max_length=20)),
                ('start_time', models.DateField()),
                ('end_time', models.DateField()),
                ('timeseries', models.NullBooleanField(default=None)),
                ('up_to_date', models.NullBooleanField(default=None)),
                ('up_to_date_note', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('cf_compliance_score', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('ceda_cc_score', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('file_qc_score', models.PositiveSmallIntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DataRequester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_by', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exists', models.BooleanField(default=False)),
                ('project', models.CharField(default='CMIP5', max_length=30)),
                ('product', models.CharField(max_length=20)),
                ('institute', models.CharField(max_length=30)),
                ('model', models.CharField(max_length=20)),
                ('experiment', models.CharField(max_length=20)),
                ('frequency', models.CharField(max_length=20)),
                ('realm', models.CharField(max_length=20)),
                ('cmor_table', models.CharField(max_length=20)),
                ('ensemble', models.CharField(max_length=10)),
                ('version', models.CharField(max_length=10)),
                ('start_time', models.DateField(blank=True, null=True)),
                ('end_time', models.DateField(blank=True, null=True)),
                ('variable', models.CharField(max_length=20)),
                ('esgf_drs', models.CharField(blank=True, max_length=200)),
                ('esgf_node', models.CharField(blank=True, max_length=80)),
                ('dataset_id', models.CharField(max_length=300, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable', models.CharField(max_length=20)),
                ('variable_long_name', models.CharField(blank=True, default='', max_length=80, null=True)),
                ('cmor_table', models.CharField(max_length=20)),
                ('frequency', models.CharField(max_length=20)),
                ('priority', models.CharField(default='normal', max_length=20)),
                ('esgf_data_collected', models.BooleanField(default=False)),
                ('number_of_models', models.IntegerField(default=0)),
                ('data_volume', models.FloatField(blank=True, null=True)),
                ('datarequesters', models.ManyToManyField(blank=True, to='qcapp.DataRequester')),
            ],
        ),
        migrations.CreateModel(
            name='QCerror',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(blank=True, max_length=20, null=True)),
                ('error_type', models.CharField(blank=True, max_length=20, null=True)),
                ('error_msg', models.CharField(blank=True, max_length=500, null=True)),
                ('report_filepath', models.CharField(blank=True, max_length=500, null=True)),
                ('file', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='qcapp.DataFile')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='data_spec',
            field=models.ManyToManyField(blank=True, to='qcapp.DataSpecification'),
        ),
        migrations.AddField(
            model_name='datafile',
            name='dataset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qcapp.Dataset'),
        ),
    ]
